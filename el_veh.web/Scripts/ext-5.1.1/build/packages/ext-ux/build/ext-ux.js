Ext.define("Ext.ux.colorpick.Selection",{mixinId:"colorselection",config:{format:"hex6",value:"FF0000",color:null,previousColor:null},applyColor:function(a){var b=a;if(Ext.isString(b)){b=Ext.ux.colorpick.ColorUtils.parseColor(a)}return b},applyValue:function(a){var b=Ext.ux.colorpick.ColorUtils.parseColor(a);return this.formatColor(b)},formatColor:function(a){return Ext.ux.colorpick.ColorUtils.formats[this.getFormat()](a)},updateColor:function(a){var b=this;if(!b.syncing){b.syncing=true;b.setValue(b.formatColor(a));b.syncing=false}},updateValue:function(c,a){var b=this;if(!b.syncing){b.syncing=true;b.setColor(c);b.syncing=false}this.fireEvent("change",b,c,a)}});Ext.define("Ext.ux.colorpick.ColorUtils",function(a){var b=Ext.isIE&&Ext.ieVersion<10;return{singleton:true,constructor:function(){a=this},backgroundTpl:b?"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{alpha}{hex}', endColorstr='#{alpha}{hex}');":"background: {rgba};",setBackground:b?function(e,c){if(e){var d=Ext.XTemplate.getTpl(a,"backgroundTpl"),f={hex:a.rgb2hex(c.r,c.g,c.b),alpha:Math.floor(c.a*255).toString(16)},g=d.apply(f);e.applyStyles(g)}}:function(e,c){if(e){var d=Ext.XTemplate.getTpl(a,"backgroundTpl"),f={rgba:a.getRGBAString(c)},g=d.apply(f);e.applyStyles(g)}},formats:{HEX6:function(c){return a.rgb2hex(c.r,c.g,c.b)},HEX8:function(c){var e=a.rgb2hex(c.r,c.g,c.b),d=Math.round(c.a*255).toString(16);if(d.length<2){e+="0"}e+=d.toUpperCase();return e}},hexRe:/#?([0-9a-f]{3,8})/i,rgbaAltRe:/rgba\(\s*([\w#\d]+)\s*,\s*([\d\.]+)\s*\)/,rgbaRe:/rgba\(\s*([\d\.]+)\s*,\s*([\d\.]+)\s*,\s*([\d\.]+)\s*,\s*([\d\.]+)\s*\)/,rgbRe:/rgb\(\s*([\d\.]+)\s*,\s*([\d\.]+)\s*,\s*([\d\.]+)\s*\)/,parseColor:function(c){if(!c){return null}var h=this,g=h.colorMap[c],f,e,d;if(g){e={r:g[0],g:g[1],b:g[2],a:1}}else{if(c==="transparent"){e={r:0,g:0,b:0,a:0}}else{f=h.hexRe.exec(c);if(f){f=f[1];switch(f.length){default:return null;case 3:e={r:parseInt(f[0]+f[0],16),g:parseInt(f[1]+f[1],16),b:parseInt(f[2]+f[2],16),a:1};break;case 6:case 8:e={r:parseInt(f.substr(0,2),16),g:parseInt(f.substr(2,2),16),b:parseInt(f.substr(4,2),16),a:parseInt(f.substr(6,2)||"ff",16)/255};break}}else{f=h.rgbaRe.exec(c);if(f){e={r:parseFloat(f[1]),g:parseFloat(f[2]),b:parseFloat(f[3]),a:parseFloat(f[4])}}else{f=h.rgbaAltRe.exec(c);if(f){e=h.parseColor(f[1]);e.a=parseFloat(f[2]);return e}f=h.rgbRe.exec(c);if(f){e={r:parseFloat(f[1]),g:parseFloat(f[2]),b:parseFloat(f[3]),a:1}}else{return null}}}}}d=this.rgb2hsv(e.r,e.g,e.b);return Ext.apply(e,d)},getRGBAString:function(c){return"rgba("+c.r+","+c.g+","+c.b+","+c.a+")"},getRGBString:function(c){return"rgb("+c.r+","+c.g+","+c.b+")"},hsv2rgb:function(k,j,g){k=k*360;if(k===360){k=0}var l=g*j;var f=k/60;var e=l*(1-Math.abs(f%2-1));var i=[0,0,0];switch(Math.floor(f)){case 0:i=[l,e,0];break;case 1:i=[e,l,0];break;case 2:i=[0,l,e];break;case 3:i=[0,e,l];break;case 4:i=[e,0,l];break;case 5:i=[l,0,e];break;default:break}var d=g-l;i[0]+=d;i[1]+=d;i[2]+=d;i[0]=Math.round(i[0]*255);i[1]=Math.round(i[1]*255);i[2]=Math.round(i[2]*255);return{r:i[0],g:i[1],b:i[2]}},rgb2hsv:function(d,i,l){d=d/255;i=i/255;l=l/255;var j=Math.max(d,i,l);var e=Math.min(d,i,l);var k=j-e;var o=0;if(k!==0){if(j===d){o=((i-l)/k)%6}else{if(j===i){o=((l-d)/k)+2}else{if(j===l){o=((d-i)/k)+4}}}}var f=o*60;if(f===360){f=0}var n=j;var p=0;if(k!==0){p=k/n}f=f/360;if(f<0){f=f+1}return{h:f,s:p,v:n}},rgb2hex:function(e,d,c){e=e.toString(16);d=d.toString(16);c=c.toString(16);if(e.length<2){e="0"+e}if(d.length<2){d="0"+d}if(c.length<2){c="0"+c}return(e+d+c).toUpperCase()},colorMap:{aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,132,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,255,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,203],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[119,128,144],slategrey:[119,128,144],snow:[255,255,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,5]}}},function(c){var a=c.formats,b={};a["#HEX6"]=function(d){return"#"+a.HEX6(d)};a["#HEX8"]=function(d){return"#"+a.HEX8(d)};Ext.Object.each(a,function(d,e){b[d.toLowerCase()]=function(f){var g=e(f);return g.toLowerCase()}});Ext.apply(a,b)});Ext.define("Ext.ux.colorpick.ColorMapController",{extend:"Ext.app.ViewController",alias:"controller.colorpickercolormapcontroller",requires:["Ext.ux.colorpick.ColorUtils"],onFirstBoxReady:function(){var d=this,c=d.getView(),b=c.down("#dragHandle"),a=b.dd;a.constrain=true;a.constrainTo=c.getEl();a.initialConstrainTo=a.constrainTo;a.on("drag",Ext.bind(d.onHandleDrag,d));d.mon(c.getEl(),{mousedown:d.onMouseDown,dragstart:d.onDragStart,scope:d})},onHandleDrag:function(c,g){var i=this,a=i.getView(),h=a.down("#dragHandle"),l=h.getX()-a.getX(),j=h.getY()-a.getY(),f=a.getEl(),k=f.getWidth(),m=f.getHeight(),b=l/k,d=j/m;if(b>0.99){b=1}if(d>0.99){d=1}a.fireEvent("handledrag",b,d)},onMouseDown:function(d){var c=this,b=c.getView(),a=b.down("#dragHandle");a.setY(d.getY());a.setX(d.getX());c.onHandleDrag();a.dd.onMouseDown(d,a.dd.el)},onDragStart:function(d){var c=this,b=c.getView(),a=b.down("#dragHandle");a.dd.onDragStart(d,a.dd.el)},onMapClick:function(h){var d=this,c=d.getView(),a=c.down("#dragHandle"),i=c.getXY(),b=h.getXY(),g,f;g=b[0]-i[0];f=b[1]-i[1];a.getEl().setStyle({left:g+"px",top:f+"px"});d.onHandleDrag()},onColorBindingChanged:function(a){var k=this,d=k.getViewModel(),f=d.get("selectedColor"),g,b=k.getView(),j=b.down("#dragHandle"),i=b.getEl(),m=i.getWidth(),n=i.getHeight(),c,h,e,l;g=Ext.ux.colorpick.ColorUtils.rgb2hsv(f.r,f.g,f.b);c=g.s;e=m*c;h=1-g.v;l=n*h;j.getEl().setStyle({left:e+"px",top:l+"px"})},onHueBindingChanged:function(b){var e=this,c=e.getViewModel(),a,d;a=Ext.ux.colorpick.ColorUtils.hsv2rgb(b,1,1);d=Ext.ux.colorpick.ColorUtils.rgb2hex(a.r,a.g,a.b);e.getView().getEl().applyStyles({"background-color":"#"+d})}});Ext.define("Ext.ux.colorpick.ColorMap",{extend:"Ext.container.Container",alias:"widget.colorpickercolormap",controller:"colorpickercolormapcontroller",requires:["Ext.ux.colorpick.ColorMapController"],cls:Ext.baseCSSPrefix+"colorpicker-colormap",items:[{xtype:"component",cls:Ext.baseCSSPrefix+"colorpicker-colormap-draghandle-container",itemId:"dragHandle",width:1,height:1,draggable:true,html:'<div class="'+Ext.baseCSSPrefix+'colorpicker-colormap-draghandle"></div>'}],listeners:{boxready:{single:true,fn:"onFirstBoxReady",scope:"controller"},colorbindingchanged:{fn:"onColorBindingChanged",scope:"controller"},huebindingchanged:{fn:"onHueBindingChanged",scope:"controller"}},afterRender:function(){var b=this,c=b.mapGradientUrl,a=b.el;b.callParent();if(!c){c=a.getStyle("background-image");c=c.substring(4,c.length-1);if(c.indexOf('"')===0){c=c.substring(1,c.length-1)}Ext.ux.colorpick.ColorMap.prototype.mapGradientUrl=c}a.setStyle("background-image","none");a=b.layout.getElementTarget();a.createChild({tag:"img",cls:Ext.baseCSSPrefix+"colorpicker-colormap-blender",src:c})},setPosition:function(c){var b=this,a=b.down("#dragHandle");if(!a.dd||!a.dd.constrain){return}if(typeof a.dd.dragEnded!=="undefined"&&!a.dd.dragEnded){return}b.fireEvent("colorbindingchanged",c)},setHue:function(a){var b=this;if(!b.getEl()){return}b.fireEvent("huebindingchanged",a)}});Ext.define("Ext.ux.colorpick.SelectorModel",{extend:"Ext.app.ViewModel",alias:"viewmodel.colorpick-selectormodel",requires:["Ext.ux.colorpick.ColorUtils"],data:{selectedColor:{r:255,g:255,b:255,h:0,s:1,v:1,a:1},previousColor:{r:0,g:0,b:0,h:0,s:1,v:1,a:1}},formulas:{hex:{get:function(d){var f=d("selectedColor.r").toString(16),e=d("selectedColor.g").toString(16),c=d("selectedColor.b").toString(16),a;a=Ext.ux.colorpick.ColorUtils.rgb2hex(f,e,c);return"#"+a},set:function(b){var a=Ext.ux.colorpick.ColorUtils.hex2rgb(b);this.changeRGB(a)}},red:{get:function(a){return a("selectedColor.r")},set:function(a){this.changeRGB({r:a})}},green:{get:function(a){return a("selectedColor.g")},set:function(a){this.changeRGB({g:a})}},blue:{get:function(a){return a("selectedColor.b")},set:function(a){this.changeRGB({b:a})}},hue:{get:function(a){return a("selectedColor.h")*360},set:function(a){this.changeHSV({h:a/360})}},saturation:{get:function(a){return a("selectedColor.s")*100},set:function(a){this.changeHSV({s:a/100})}},value:{get:function(b){var a=b("selectedColor.v");return a*100},set:function(a){this.changeHSV({v:a/100})}},alpha:{get:function(c){var b=c("selectedColor.a");return b*100},set:function(a){this.set("selectedColor",Ext.applyIf({a:a/100},this.data.selectedColor))}}},changeHSV:function(b){Ext.applyIf(b,this.data.selectedColor);var a=Ext.ux.colorpick.ColorUtils.hsv2rgb(b.h,b.s,b.v);b.r=a.r;b.g=a.g;b.b=a.b;this.set("selectedColor",b)},changeRGB:function(b){Ext.applyIf(b,this.data.selectedColor);var a=Ext.ux.colorpick.ColorUtils.rgb2hsv(b.r,b.g,b.b);b.h=a.h;b.s=a.s;b.v=a.v;this.set("selectedColor",b)}});Ext.define("Ext.ux.colorpick.SelectorController",{extend:"Ext.app.ViewController",alias:"controller.colorpick-selectorcontroller",requires:["Ext.ux.colorpick.ColorUtils"],initViewModel:function(){var b=this,a=b.getView();a.childViewModel.bind("{selectedColor}",function(c){a.setColor(c)})},destroy:function(){var c=this,b=c.getView(),a=b.childViewModel;if(a){a.destroy();b.childViewModel=null}c.callParent()},changeHSV:function(d){var a=this.getView(),b=a.getColor(),c;Ext.applyIf(d,b);c=Ext.ux.colorpick.ColorUtils.hsv2rgb(d.h,d.s,d.v);Ext.apply(d,c);a.setColor(d)},onColorMapHandleDrag:function(b,a){this.changeHSV({s:b,v:1-a})},onValueSliderHandleDrag:function(a){this.changeHSV({v:1-a})},onSaturationSliderHandleDrag:function(a){this.changeHSV({s:1-a})},onHueSliderHandleDrag:function(a){this.changeHSV({h:1-a})},onAlphaSliderHandleDrag:function(c){var a=this.getView(),b=a.getColor(),d=Ext.applyIf({a:1-c},b);a.setColor(d);a.el.repaint()},onPreviousColorSelected:function(c,b){var a=this.getView();a.setColor(b)},onOK:function(){var b=this,a=b.getView();a.fireEvent("ok",a,a.getValue())},onCancel:function(){this.fireViewEvent("cancel",this.getView())},onResize:function(){var j=this,c=j.getView(),i=c.childViewModel,e=j.getReferences(),g,f,d,b;if(!j.hasResizedOnce){j.hasResizedOnce=true;return}g=i.get("hue");f=i.get("saturation");d=i.get("value");b=i.get("alpha");console.log("h="+g);e.colorMap.setPosition(i.getData());e.hueSlider.setHue(g);e.satSlider.setSaturation(f);e.valueSlider.setValue(d);e.alphaSlider.setAlpha(b)}});Ext.define("Ext.ux.colorpick.ColorPreview",{extend:"Ext.Component",alias:"widget.colorpickercolorpreview",requires:["Ext.util.Format"],style:"position: relative",html:'<div class="filter" style="height:100%; width:100%; position: absolute;"></div><a class="btn" style="height:100%; width:100%; position: absolute;"></a>',cls:"x-colorpreview",height:256,onRender:function(){var a=this;a.callParent(arguments);a.mon(a.el.down(".btn"),"click",a.onClick,a)},onClick:function(){this.fireEvent("click",this,this.color)},setColor:function(a){var c=this,b=c.getEl();if(!b){return}c.color=a;c.applyBgStyle(a)},bgStyleTpl:Ext.create("Ext.XTemplate",Ext.isIE&&Ext.ieVersion<10?"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{hexAlpha}{hex}', endColorstr='#{hexAlpha}{hex}');":"background: {rgba};"),applyBgStyle:function(a){var e=this,g=Ext.ux.colorpick.ColorUtils,c=e.getEl().down(".filter"),d,f,b,h;d=g.rgb2hex(a.r,a.g,a.b);f=Ext.util.Format.hex(Math.floor(a.a*255),2);b=g.getRGBAString(a);h=this.bgStyleTpl.apply({hex:d,hexAlpha:f,rgba:b});c.applyStyles(h)}});Ext.define("Ext.ux.colorpick.SliderController",{extend:"Ext.app.ViewController",alias:"controller.colorpick-slidercontroller",boxReady:function(d){var e=this,c=e.getDragContainer(),b=e.getDragHandle(),a=b.dd;a.constrain=true;a.constrainTo=c.getEl();a.initialConstrainTo=a.constrainTo;a.on("drag",e.onHandleDrag,e)},getDragHandle:function(){return this.view.lookupReference("dragHandle")},getDragContainer:function(){return this.view.lookupReference("dragHandleContainer")},onHandleDrag:function(d){var g=this,i=g.getView(),a=g.getDragContainer(),f=g.getDragHandle(),h=f.getY()-a.getY(),c=a.getEl(),j=c.getHeight(),b=h/j;if(b>0.99){b=1}i.fireEvent("handledrag",b)},onMouseDown:function(c){var b=this,a=b.getDragHandle(),d=c.getY();a.setY(d);b.onHandleDrag();a.el.repaint();a.dd.onMouseDown(c,a.dd.el)},onDragStart:function(c){var b=this,a=b.getDragHandle();a.dd.onDragStart(c,a.dd.el)},onMouseUp:function(){var a=this.getDragHandle();a.dd.dragEnded=true}});Ext.define("Ext.ux.colorpick.Slider",{extend:"Ext.container.Container",xtype:"colorpickerslider",controller:"colorpick-slidercontroller",baseCls:Ext.baseCSSPrefix+"colorpicker-slider",layout:"center",requires:["Ext.layout.container.Center","Ext.ux.colorpick.SliderController"],referenceHolder:true,listeners:{element:"el",mousedown:"onMouseDown",mouseup:"onMouseUp",dragstart:"onDragStart"},items:{xtype:"container",cls:Ext.baseCSSPrefix+"colorpicker-draghandle-container",reference:"dragHandleContainer",height:"100%",items:{xtype:"component",cls:Ext.baseCSSPrefix+"colorpicker-draghandle-outer",reference:"dragHandle",width:"100%",height:1,draggable:true,html:'<div class="'+Ext.baseCSSPrefix+'colorpicker-draghandle"></div>'}},getDragHandle:function(){return this.lookupReference("dragHandle")},getDragContainer:function(){return this.lookupReference("dragHandleContainer")}});Ext.define("Ext.ux.colorpick.SliderAlpha",{extend:"Ext.ux.colorpick.Slider",alias:"widget.colorpickerslideralpha",cls:Ext.baseCSSPrefix+"colorpicker-alpha",requires:["Ext.XTemplate"],gradientStyleTpl:Ext.create("Ext.XTemplate",Ext.isIE&&Ext.ieVersion<10?"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#FF{hex}', endColorstr='#00{hex}');":"background: -mox-linear-gradient(top, rgba({r}, {g}, {b}, 1) 0%, rgba({r}, {g}, {b}, 0) 100%);background: -webkit-linear-gradient(top,rgba({r}, {g}, {b}, 1) 0%, rgba({r}, {g}, {b}, 0) 100%);background: -o-linear-gradient(top, rgba({r}, {g}, {b}, 1) 0%, rgba({r}, {g}, {b}, 0) 100%);background: -ms-linear-gradient(top, rgba({r}, {g}, {b}, 1) 0%, rgba({r}, {g}, {b}, 0) 100%);background: linear-gradient(to bottom, rgba({r}, {g}, {b}, 1) 0%, rgba({r}, {g}, {b}, 0) 100%);"),setAlpha:function(g){var d=this,b=d.getDragContainer(),a=d.getDragHandle(),f=b.getEl(),e=f.getHeight(),c,h;if(!a.dd||!a.dd.constrain){return}if(typeof a.dd.dragEnded!=="undefined"&&!a.dd.dragEnded){return}h=e*(1-(g/100));c=a.getEl();c.setStyle({top:h})},setColor:function(b){var e=this,a=e.getDragContainer(),d,c;if(!e.getEl()){return}d=Ext.ux.colorpick.ColorUtils.rgb2hex(b.r,b.g,b.b);c=a.getEl().down(".x-autocontainer-innerCt");c.applyStyles(e.gradientStyleTpl.apply({hex:d,r:b.r,g:b.g,b:b.b}))}});Ext.define("Ext.ux.colorpick.SliderSaturation",{extend:"Ext.ux.colorpick.Slider",alias:"widget.colorpickerslidersaturation",cls:Ext.baseCSSPrefix+"colorpicker-saturation",gradientStyleTpl:Ext.create("Ext.XTemplate",Ext.isIE&&Ext.ieVersion<10?"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{hex}', endColorstr='#ffffff');":"background: -mox-linear-gradient(top, #{hex} 0%, #ffffff 100%);background: -webkit-linear-gradient(top, #{hex} 0%,#ffffff 100%);background: -o-linear-gradient(top, #{hex} 0%,#ffffff 100%);background: -ms-linear-gradient(top, #{hex} 0%,#ffffff 100%);background: linear-gradient(to bottom, #{hex} 0%,#ffffff 100%);"),setSaturation:function(e){var d=this,b=d.getDragContainer(),a=d.getDragHandle(),g=b.getEl(),f=g.getHeight(),c,h;if(!a.dd||!a.dd.constrain){return}if(typeof a.dd.dragEnded!=="undefined"&&!a.dd.dragEnded){return}c=1-(e/100);h=f*c;a.getEl().setStyle({top:h+"px"})},setHue:function(b){var e=this,a=e.getDragContainer(),c,d;if(!e.getEl()){return}c=Ext.ux.colorpick.ColorUtils.hsv2rgb(b,1,1);d=Ext.ux.colorpick.ColorUtils.rgb2hex(c.r,c.g,c.b);a.getEl().applyStyles(e.gradientStyleTpl.apply({hex:d}))}});Ext.define("Ext.ux.colorpick.SliderValue",{extend:"Ext.ux.colorpick.Slider",alias:"widget.colorpickerslidervalue",cls:Ext.baseCSSPrefix+"colorpicker-value",requires:["Ext.XTemplate"],gradientStyleTpl:Ext.create("Ext.XTemplate",Ext.isIE&&Ext.ieVersion<10?"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{hex}', endColorstr='#000000');":"background: -mox-linear-gradient(top, #{hex} 0%, #000000 100%);background: -webkit-linear-gradient(top, #{hex} 0%,#000000 100%);background: -o-linear-gradient(top, #{hex} 0%,#000000 100%);background: -ms-linear-gradient(top, #{hex} 0%,#000000 100%);background: linear-gradient(to bottom, #{hex} 0%,#000000 100%);"),setValue:function(g){var d=this,b=d.getDragContainer(),a=d.getDragHandle(),f=b.getEl(),e=f.getHeight(),c,h;if(!a.dd||!a.dd.constrain){return}if(typeof a.dd.dragEnded!=="undefined"&&!a.dd.dragEnded){return}c=1-(g/100);h=e*c;a.getEl().setStyle({top:h+"px"})},setHue:function(b){var e=this,a=e.getDragContainer(),c,d;if(!e.getEl()){return}c=Ext.ux.colorpick.ColorUtils.hsv2rgb(b,1,1);d=Ext.ux.colorpick.ColorUtils.rgb2hex(c.r,c.g,c.b);a.getEl().applyStyles(e.gradientStyleTpl.apply({hex:d}))}});Ext.define("Ext.ux.colorpick.SliderHue",{extend:"Ext.ux.colorpick.Slider",alias:"widget.colorpickersliderhue",cls:Ext.baseCSSPrefix+"colorpicker-hue",afterRender:function(){var b=this,c=b.gradientUrl,a=b.el;b.callParent();if(!c){c=a.getStyle("background-image");c=c.substring(4,c.length-1);if(c.indexOf('"')===0){c=c.substring(1,c.length-1)}Ext.ux.colorpick.SliderHue.prototype.gradientUrl=c}a.setStyle("background-image","none");a=b.getDragContainer().layout.getElementTarget();a.createChild({tag:"img",cls:Ext.baseCSSPrefix+"colorpicker-hue-gradient",src:c})},setHue:function(c){var e=this,b=e.getDragContainer(),a=e.getDragHandle(),g=b.getEl(),f=g.getHeight(),d,h;if(!a.dd||!a.dd.constrain){return}if(typeof a.dd.dragEnded!=="undefined"&&!a.dd.dragEnded){return}h=f*(360-c)/360;d=a.getEl();d.setStyle({top:h+"px"})}});Ext.define("Ext.ux.colorpick.Selector",{extend:"Ext.container.Container",xtype:"colorselector",mixins:["Ext.ux.colorpick.Selection"],controller:"colorpick-selectorcontroller",requires:["Ext.layout.container.HBox","Ext.form.field.Text","Ext.form.field.Number","Ext.ux.colorpick.ColorMap","Ext.ux.colorpick.SelectorModel","Ext.ux.colorpick.SelectorController","Ext.ux.colorpick.ColorPreview","Ext.ux.colorpick.Slider","Ext.ux.colorpick.SliderAlpha","Ext.ux.colorpick.SliderSaturation","Ext.ux.colorpick.SliderValue","Ext.ux.colorpick.SliderHue"],width:580,height:337,cls:Ext.baseCSSPrefix+"colorpicker",padding:10,layout:{type:"hbox",align:"stretch"},defaultBindProperty:"value",twoWayBindable:["value"],fieldWidth:50,fieldPad:5,showPreviousColor:false,showOkCancelButtons:false,listeners:{resize:"onResize"},constructor:function(b){var c=this,a=Ext.Factory.viewModel("colorpick-selectormodel");c.childViewModel=a;c.items=[c.getMapAndHexRGBFields(a),c.getSliderAndHField(a),c.getSliderAndSField(a),c.getSliderAndVField(a),c.getSliderAndAField(a),c.getPreviewAndButtons(a,b)];c.callParent(arguments)},updateColor:function(a){var b=this;b.mixins.colorselection.updateColor.call(b,a);b.childViewModel.set("selectedColor",a)},updatePreviousColor:function(a){this.childViewModel.set("previousColor",a)},getMapAndHexRGBFields:function(a){var c=this,d={top:0,right:c.fieldPad,bottom:0,left:0},b=c.fieldWidth;return{xtype:"container",viewModel:a,cls:Ext.baseCSSPrefix+"colorpicker-escape-overflow",flex:1,layout:{type:"vbox",align:"stretch"},margin:"0 10 0 0",items:[{xtype:"colorpickercolormap",reference:"colorMap",flex:1,bind:{position:{bindTo:"{selectedColor}",deep:true},hue:"{selectedColor.h}"},listeners:{handledrag:"onColorMapHandleDrag"}},{xtype:"container",layout:"hbox",defaults:{labelAlign:"top",labelSeparator:"",allowBlank:false,onChange:function(){if(this.isValid()){Ext.form.field.Base.prototype.onChange.apply(this,arguments)}}},items:[{xtype:"textfield",fieldLabel:"HEX",flex:1,bind:"{hex}",margin:d,readOnly:true},{xtype:"numberfield",fieldLabel:"R",bind:"{red}",width:b,hideTrigger:true,maxValue:255,minValue:0,margin:d},{xtype:"numberfield",fieldLabel:"G",bind:"{green}",width:b,hideTrigger:true,maxValue:255,minValue:0,margin:d},{xtype:"numberfield",fieldLabel:"B",bind:"{blue}",width:b,hideTrigger:true,maxValue:255,minValue:0,margin:0}]}]}},getSliderAndHField:function(a){var b=this;return{xtype:"container",viewModel:a,cls:Ext.baseCSSPrefix+"colorpicker-escape-overflow",width:b.fieldWidth,layout:{type:"vbox",align:"stretch"},items:[{xtype:"colorpickersliderhue",reference:"hueSlider",flex:1,bind:{hue:"{selectedColor.h}"},listeners:{handledrag:"onHueSliderHandleDrag"}},{xtype:"numberfield",fieldLabel:"H",labelAlign:"top",width:b.fieldWidth,labelSeparator:"",bind:"{hue}",hideTrigger:true,maxValue:360,minValue:0,allowBlank:false,margin:0}]}},getSliderAndSField:function(a){var b=this;return{xtype:"container",viewModel:a,cls:Ext.baseCSSPrefix+"colorpicker-escape-overflow",width:b.fieldWidth,layout:{type:"vbox",align:"stretch"},margin:{right:b.fieldPad,left:b.fieldPad},items:[{xtype:"colorpickerslidersaturation",reference:"satSlider",flex:1,bind:{saturation:"{saturation}",hue:"{selectedColor.h}"},listeners:{handledrag:"onSaturationSliderHandleDrag"}},{xtype:"numberfield",fieldLabel:"S",labelAlign:"top",labelSeparator:"",bind:"{saturation}",hideTrigger:true,maxValue:100,minValue:0,allowBlank:false,margin:0}]}},getSliderAndVField:function(a){var b=this;return{xtype:"container",viewModel:a,cls:Ext.baseCSSPrefix+"colorpicker-escape-overflow",width:b.fieldWidth,layout:{type:"vbox",align:"stretch"},items:[{xtype:"colorpickerslidervalue",reference:"valueSlider",flex:1,bind:{value:"{value}",hue:"{selectedColor.h}"},listeners:{handledrag:"onValueSliderHandleDrag"}},{xtype:"numberfield",fieldLabel:"V",labelAlign:"top",labelSeparator:"",bind:"{value}",hideTrigger:true,maxValue:100,minValue:0,allowBlank:false,margin:0}]}},getSliderAndAField:function(a){var b=this;return{xtype:"container",viewModel:a,cls:Ext.baseCSSPrefix+"colorpicker-escape-overflow",width:b.fieldWidth,layout:{type:"vbox",align:"stretch"},margin:{left:b.fieldPad},items:[{xtype:"colorpickerslideralpha",reference:"alphaSlider",flex:1,bind:{alpha:"{alpha}",color:{bindTo:"{selectedColor}",deep:true}},listeners:{handledrag:"onAlphaSliderHandleDrag"}},{xtype:"numberfield",fieldLabel:"A",labelAlign:"top",labelSeparator:"",bind:"{alpha}",hideTrigger:true,maxValue:100,minValue:0,allowBlank:false,margin:0}]}},getPreviewAndButtons:function(a,c){var b=[{xtype:"colorpickercolorpreview",flex:1,bind:{color:{bindTo:"{selectedColor}",deep:true}}}];if(c.showPreviousColor){b.push({xtype:"colorpickercolorpreview",flex:1,bind:{color:{bindTo:"{previousColor}",deep:true}},listeners:{click:"onPreviousColorSelected"}})}if(c.showOkCancelButtons){b.push({xtype:"button",text:"OK",margin:"10 0 0 0",handler:"onOK"},{xtype:"button",text:"Cancel",margin:"10 0 0 0",handler:"onCancel"})}return{xtype:"container",viewModel:a,width:70,margin:"0 0 0 10",items:b,layout:{type:"vbox",align:"stretch"}}}});Ext.define("Ext.ux.colorpick.ButtonController",{extend:"Ext.app.ViewController",alias:"controller.colorpick-buttoncontroller",requires:["Ext.window.Window","Ext.layout.container.Fit","Ext.ux.colorpick.Selector","Ext.ux.colorpick.ColorUtils"],afterRender:function(a){a.updateColor(a.getColor())},destroy:function(){var a=this.getView(),b=a.colorPickerWindow;if(b){b.destroy();a.colorPickerWindow=a.colorPicker=null}this.callParent()},getPopup:function(){var c=this.getView(),b=c.colorPickerWindow,a;if(!b){b=Ext.create(c.getPopup());c.colorPickerWindow=b;b.colorPicker=c.colorPicker=a=b.lookupReference("selector");a.setFormat(c.getFormat());a.on({ok:"onColorPickerOK",cancel:"onColorPickerCancel",scope:this})}return b},onClick:function(){var e=this,c=e.getView(),d=c.getColor(),b=e.getPopup(),a=b.colorPicker;a.setColor(d);a.setPreviousColor(d);b.showBy(c,"tl-br?")},onColorPickerOK:function(c){var a=this.getView(),b=c.getColor(),d=a.colorPickerWindow;d.hide();a.setColor(b)},onColorPickerCancel:function(){var a=this.getView(),b=a.colorPickerWindow;b.hide()},syncColor:function(b){var a=this.getView();Ext.ux.colorpick.ColorUtils.setBackground(a.filterEl,b)}});Ext.define("Ext.ux.colorpick.Button",{extend:"Ext.Component",xtype:"colorbutton",controller:"colorpick-buttoncontroller",mixins:["Ext.ux.colorpick.Selection"],requires:["Ext.ux.colorpick.ButtonController"],baseCls:Ext.baseCSSPrefix+"colorpicker-button",width:20,height:20,childEls:["btnEl","filterEl"],config:{popup:{lazy:true,$value:{xtype:"window",referenceHolder:true,minWidth:540,minHeight:200,layout:"fit",header:false,resizable:true,items:{xtype:"colorselector",reference:"selector",showPreviousColor:true,showOkCancelButtons:true}}}},defaultBindProperty:"value",twoWayBindable:"value",renderTpl:'<div id="{id}-filterEl" data-ref="filterEl" style="height:100%; width:100%; position: absolute;"></div><a id="{id}-btnEl" data-ref="btnEl" style="height:100%; width:100%; position: absolute;"></a>',listeners:{click:"onClick",element:"btnEl"},updateColor:function(a){var b=this,c=b.colorPicker;b.mixins.colorselection.updateColor.call(b,a);Ext.ux.colorpick.ColorUtils.setBackground(b.filterEl,a);if(c){c.setColor(a)}},updateFormat:function(b){var a=this.colorPicker;if(a){a.setFormat(b)}}});Ext.define("Ext.ux.colorpick.Field",{extend:"Ext.form.field.Picker",xtype:"colorfield",mixins:["Ext.ux.colorpick.Selection"],requires:["Ext.window.Window","Ext.ux.colorpick.Selector","Ext.ux.colorpick.ColorUtils","Ext.layout.container.Fit"],editable:false,matchFieldWidth:false,beforeBodyEl:['<div class="'+Ext.baseCSSPrefix+'colorpicker-field-swatch"><div id="{id}-swatchEl" data-ref="swatchEl" class="'+Ext.baseCSSPrefix+'colorpicker-field-swatch-inner"></div></div>'],cls:Ext.baseCSSPrefix+"colorpicker-field",childEls:["swatchEl"],config:{popup:{lazy:true,$value:{xtype:"window",referenceHolder:true,minWidth:540,minHeight:200,layout:"fit",header:false,resizable:true,items:{xtype:"colorselector",reference:"selector",showPreviousColor:true,showOkCancelButtons:true}}}},afterRender:function(){this.callParent();this.updateValue(this.value)},createPicker:function(){var c=this,a=c.getPopup(),b;c.colorPickerWindow=a=Ext.create(a);c.colorPicker=b=a.lookupReference("selector");b.setFormat(c.getFormat());b.setColor(c.getColor());b.on({ok:"onColorPickerOK",cancel:"onColorPickerCancel",scope:c});return c.colorPickerWindow},onColorPickerOK:function(a){this.setColor(a.getColor());this.collapse()},onColorPickerCancel:function(){this.collapse()},onExpand:function(){var a=this.getColor();this.colorPicker.setPreviousColor(a)},setValue:function(a){var b=this,d=b.applyValue(a);b.callParent([d]);b.updateValue(d)},updateFormat:function(b){var a=this.colorPicker;if(a){a.setFormat(b)}},updateValue:function(a){var b=this,d;if(!b.syncing){b.syncing=true;b.setColor(a);b.syncing=false}d=b.getColor();Ext.ux.colorpick.ColorUtils.setBackground(b.swatchEl,d);if(b.colorPicker){b.colorPicker.setColor(d)}}});Ext.define("Ext.ux.rating.Picker",{extend:"Ext.Widget",xtype:"rating",focusable:true,cachedConfig:{family:"monospace",glyphs:"☆★",minimum:1,limit:5,overStyle:null,rounding:1,scale:"125%",selectedStyle:null,style:null,tooltip:null,trackOver:true,value:null,tooltipText:null,trackingValue:null},config:{animate:null},element:{cls:"u"+Ext.baseCSSPrefix+"rating-picker",reference:"element",children:[{reference:"innerEl",cls:"u"+Ext.baseCSSPrefix+"rating-picker-inner",listeners:{click:"onClick",mousemove:"onMouseMove",mouseenter:"onMouseEnter",mouseleave:"onMouseLeave"},children:[{reference:"valueEl",cls:"u"+Ext.baseCSSPrefix+"rating-picker-value"},{reference:"trackerEl",cls:"u"+Ext.baseCSSPrefix+"rating-picker-tracker"}]}]},defaultBindProperty:"value",twoWayBindable:"value",overCls:"u"+Ext.baseCSSPrefix+"rating-picker-over",trackOverCls:"u"+Ext.baseCSSPrefix+"rating-picker-track-over",applyGlyphs:function(a){if(typeof a==="string"){a=[a.charAt(0),a.charAt(1)]}else{if(typeof a[0]==="number"){a=[String.fromCharCode(a[0]),String.fromCharCode(a[1])]}}return a},applyOverStyle:function(a){this.trackerEl.applyStyles(a)},applySelectedStyle:function(a){this.valueEl.applyStyles(a)},applyStyle:function(a){this.element.applyStyles(a)},applyTooltip:function(a){if(a&&typeof a!=="function"){if(!a.isTemplate){a=new Ext.XTemplate(a)}a=a.apply.bind(a)}return a},applyTrackingValue:function(a){return this.applyValue(a)},applyValue:function(c){if(c!==null){var b=this.getRounding(),a=this.getLimit(),d=this.getMinimum();c=Math.round(Math.round(c/b)*b*1000)/1000;c=(c<d)?d:(c>a?a:c)}return c},onClick:function(a){var b=this.valueFromEvent(a);this.setValue(b)},onMouseEnter:function(){this.element.addCls(this.overCls)},onMouseLeave:function(){this.element.removeCls(this.overCls)},onMouseMove:function(a){var b=this.valueFromEvent(a);this.setTrackingValue(b)},updateFamily:function(a){this.element.setStyle("fontFamily","'"+a+"'")},updateGlyphs:function(){this.refreshGlyphs()},updateLimit:function(){this.refreshGlyphs()},updateScale:function(a){this.element.setStyle("fontSize",a)},updateTooltip:function(){this.refreshTooltip()},updateTooltipText:function(e){var d=this.innerEl,a=Ext.tip&&Ext.tip.QuickTipManager,b=a&&a.tip,c;if(a){d.dom.setAttribute("data-qtip",e);this.trackerEl.dom.setAttribute("data-qtip",e);c=b&&b.activeTarget;c=c&&c.el;if(c&&d.contains(c)){b.update(e)}}},updateTrackingValue:function(d){var c=this,a=c.trackerEl,b=c.valueToPercent(d);a.setStyle("width",b);c.refreshTooltip()},updateTrackOver:function(a){this.element[a?"addCls":"removeCls"](this.trackOverCls)},updateValue:function(h,c){var f=this,b=f.getAnimate(),g=f.valueEl,e=f.valueToPercent(h),d,a;if(f.isConfiguring||!b){g.setStyle("width",e)}else{g.stopAnimation();g.animate(Ext.merge({from:{width:f.valueToPercent(c)},to:{width:e}},b))}f.refreshTooltip();if(!f.isConfiguring){if(f.hasListeners.change){f.fireEvent("change",f,h,c)}d=f.getWidgetColumn&&f.getWidgetColumn();a=d&&f.getWidgetRecord&&f.getWidgetRecord();if(a&&d.dataIndex){a.set(d.dataIndex,h)}}},afterCachedConfig:function(){this.refresh();return this.callParent(arguments)},initConfig:function(a){this.isConfiguring=true;this.callParent([a]);this.refresh()},setConfig:function(){var a=this;a.isReconfiguring=true;a.callParent(arguments);a.isReconfiguring=false;a.refresh();return a},destroy:function(){var a=this,b=a.tip;if(b){a.tip=Ext.destroy(b)}a.callParent()},privates:{getGlyphTextNode:function(b){var a=b.lastChild;if(!a||a.nodeType!==3){a=b.ownerDocument.createTextNode("");b.appendChild(a)}return a},getTooltipData:function(){var a=this;return{component:a,tracking:a.getTrackingValue(),trackOver:a.getTrackOver(),value:a.getValue()}},refresh:function(){var a=this;if(a.invalidGlyphs){a.refreshGlyphs(true)}if(a.invalidTooltip){a.refreshTooltip(true)}},refreshGlyphs:function(a){var i=this,g=!a&&(i.isConfiguring||i.isReconfiguring),c,j,f,h,e,b,d;if(!g){c=i.getGlyphTextNode(i.innerEl.dom);d=i.getGlyphTextNode(i.valueEl.dom);b=i.getGlyphTextNode(i.trackerEl.dom);j=i.getGlyphs();f=i.getLimit();for(h=e="";f--;){e+=j[0];h+=j[1]}c.nodeValue=e;d.nodeValue=h;b.nodeValue=h}i.invalidGlyphs=g},refreshTooltip:function(b){var c=this,a=!b&&(c.isConfiguring||c.isReconfiguring),e=c.getTooltip(),d,f;if(!a){e=c.getTooltip();if(e){d=c.getTooltipData();f=e(d);c.setTooltipText(f)}}c.invalidTooltip=a},valueFromEvent:function(a){var f=this,b=f.innerEl,e=a.getX(),j=f.getRounding(),d=b.getX(),g=e-d,h=b.getWidth(),c=f.getLimit(),i;if(f.getInherited().rtl){g=h-g}i=g/h*c;i=Math.ceil(i/j)*j;return i},valueToPercent:function(a){a=(a/this.getLimit())*100;return a+"%"}}});Ext.define('Ext.ux.statusbar.StatusBar',{extend:'Ext.toolbar.Toolbar',alternateClassName:'Ext.ux.StatusBar',alias:'widget.statusbar',requires:['Ext.toolbar.TextItem'],cls:'x-statusbar',busyIconCls:'x-status-busy',busyText:'Loading...',autoClear:5000,emptyText:'&#160;',activeThreadId:0,initComponent:function(){var right=this.statusAlign==='right';this.callParent(arguments);this.currIconCls=this.iconCls||this.defaultIconCls;this.statusEl=Ext.create('Ext.toolbar.TextItem',{cls:'x-status-text '+(this.currIconCls||''),text:this.text||this.defaultText||''});if(right){this.cls+=' x-status-right';this.add('->');this.add(this.statusEl);}else{this.insert(0,this.statusEl);this.insert(1,'->');}},setStatus:function(o){var me=this;o=o||{};Ext.suspendLayouts();if(Ext.isString(o)){o={text:o};}
if(o.text!==undefined){me.setText(o.text);}
if(o.iconCls!==undefined){me.setIcon(o.iconCls);}
if(o.clear){var c=o.clear,wait=me.autoClear,defaults={useDefaults:true,anim:true};if(Ext.isObject(c)){c=Ext.applyIf(c,defaults);if(c.wait){wait=c.wait;}}else if(Ext.isNumber(c)){wait=c;c=defaults;}else if(Ext.isBoolean(c)){c=defaults;}
c.threadId=this.activeThreadId;Ext.defer(me.clearStatus,wait,me,[c]);}
Ext.resumeLayouts(true);return me;},clearStatus:function(o){o=o||{};var me=this,statusEl=me.statusEl;if(o.threadId&&o.threadId!==me.activeThreadId){return me;}
var text=o.useDefaults?me.defaultText:me.emptyText,iconCls=o.useDefaults?(me.defaultIconCls?me.defaultIconCls:''):'';if(o.anim){statusEl.el.puff({remove:false,useDisplay:true,callback:function(){statusEl.el.show();me.setStatus({text:text,iconCls:iconCls});}});}else{me.setStatus({text:text,iconCls:iconCls});}
return me;},setText:function(text){var me=this;me.activeThreadId++;me.text=text||'';if(me.rendered){me.statusEl.setText(me.text);}
return me;},getText:function(){return this.text;},setIcon:function(cls){var me=this;me.activeThreadId++;cls=cls||'';if(me.rendered){if(me.currIconCls){me.statusEl.removeCls(me.currIconCls);me.currIconCls=null;}
if(cls.length>0){me.statusEl.addCls(cls);me.currIconCls=cls;}}else{me.currIconCls=cls;}
return me;},showBusy:function(o){if(Ext.isString(o)){o={text:o};}
o=Ext.applyIf(o||{},{text:this.busyText,iconCls:this.busyIconCls});return this.setStatus(o);}});Ext.define('Ext.ux.Explorer',{extend:'Ext.panel.Panel',xtype:'explorer',requires:['Ext.layout.container.Border','Ext.toolbar.Breadcrumb','Ext.tree.Panel'],config:{breadcrumb:{dock:'top',xtype:'breadcrumb',reference:'breadcrumb'},contentView:{xtype:'dataview',reference:'contentView',region:'center',cls:Ext.baseCSSPrefix+'explorer-view',itemSelector:'.'+Ext.baseCSSPrefix+'explorer-item',tpl:'<tpl for=".">'+'<div class="'+Ext.baseCSSPrefix+'explorer-item">'+'<div class="{iconCls}">'+'<div class="'+Ext.baseCSSPrefix+'explorer-node-icon'+'{[values.leaf ? " '+Ext.baseCSSPrefix+'explorer-leaf-icon'+'" : ""]}'+'">'+'</div>'+'<div class="'+Ext.baseCSSPrefix+'explorer-item-text">{text}</div>'+'</div>'+'</div>'+'</tpl>'},store:null,tree:{xtype:'treepanel',reference:'tree',region:'west',width:200}},renderConfig:{selection:null},layout:'border',referenceHolder:true,defaultListenerScope:true,cls:Ext.baseCSSPrefix+'explorer',initComponent:function(){var me=this,store=me.getStore();if(!store){Ext.Error.raise('Ext.ux.Explorer requires a store.');}
me.dockedItems=[me.getBreadcrumb()];me.items=[me.getTree(),me.getContentView()];me.callParent();},applyBreadcrumb:function(breadcrumb){var store=this.getStore();breadcrumb=Ext.create(Ext.apply({store:store,selection:store.getRoot()},breadcrumb));breadcrumb.on('selectionchange','_onBreadcrumbSelectionChange',this);return breadcrumb;},applyContentView:function(contentView){var contentStore=this.contentStore=new Ext.data.Store({model:this.getStore().model});contentView=Ext.create(Ext.apply({store:contentStore},contentView));return contentView;},applyTree:function(tree){tree=Ext.create(Ext.apply({store:this.getStore()},tree));tree.on('selectionchange','_onTreeSelectionChange',this);return tree;},updateSelection:function(node){var me=this,refs=me.getReferences(),breadcrumb=refs.breadcrumb,tree=refs.tree,treeSelectionModel=tree.getSelectionModel(),contentStore=me.contentStore,parentNode,treeView;if(breadcrumb.getSelection()!==node){breadcrumb.setSelection(node);}
if(treeSelectionModel.getSelection()[0]!==node){treeSelectionModel.select([node]);parentNode=node.parentNode;if(parentNode){parentNode.expand();}
treeView=tree.getView();treeView.scrollRowIntoView(treeView.getRow(node));}
contentStore.removeAll();contentStore.add(node.hasChildNodes()?node.childNodes:[node]);},updateStore:function(store){this.getBreadcrumb().setStore(store);},privates:{_onTreeSelectionChange:function(tree,selection){this.setSelection(selection[0]);},_onBreadcrumbSelectionChange:function(breadcrumb,selection){this.setSelection(selection);}}});Ext.ux.DataViewTransition=Ext.extend(Object,{defaults:{duration:750,idProperty:'id'},constructor:function(config){Ext.apply(this,config||{},this.defaults);},init:function(dataview){this.dataview=dataview;var idProperty=this.idProperty;dataview.blockRefresh=true;dataview.updateIndexes=Ext.Function.createSequence(dataview.updateIndexes,function(){this.getTargetEl().select(this.itemSelector).each(function(element,composite,index){element.id=element.dom.id=Ext.util.Format.format("{0}-{1}",dataview.id,dataview.store.getAt(index).get(idProperty));},this);},dataview);this.dataviewID=dataview.id;this.cachedStoreData={};this.cacheStoreData(dataview.store.snapshot);dataview.store.on('datachanged',function(store){var parentEl=dataview.getTargetEl(),calcItem=store.getAt(0),added=this.getAdded(store),removed=this.getRemoved(store),previous=this.getRemaining(store),existing=Ext.apply({},previous,added);Ext.each(removed,function(item){Ext.fly(this.dataviewID+'-'+item.get(this.idProperty)).animate({remove:false,duration:duration,opacity:0,useDisplay:true});},this);if(calcItem==undefined){this.cacheStoreData(store);return;}
var el=Ext.get(this.dataviewID+"-"+calcItem.get(this.idProperty));var itemCount=store.getCount(),itemWidth=el.getMargin('lr')+el.getWidth(),itemHeight=el.getMargin('bt')+el.getHeight(),dvWidth=parentEl.getWidth(),columns=Math.floor(dvWidth/itemWidth),rows=Math.ceil(itemCount/columns),currentRows=Math.ceil(this.getExistingCount()/columns);parentEl.applyStyles({display:'block',position:'relative'});var oldPositions={},newPositions={},elCache={};Ext.iterate(previous,function(id,item){var id=item.get(this.idProperty),el=elCache[id]=Ext.get(this.dataviewID+'-'+id);oldPositions[id]={top:el.getY()-parentEl.getY()-el.getMargin('t')-parentEl.getPadding('t'),left:el.getX()-parentEl.getX()-el.getMargin('l')-parentEl.getPadding('l')};},this);Ext.iterate(previous,function(id,item){var oldPos=oldPositions[id],el=elCache[id];if(el.getStyle('position')!='absolute'){elCache[id].applyStyles({position:'absolute',left:oldPos.left+"px",top:oldPos.top+"px",width:el.getWidth(!Ext.isIE||Ext.isStrict),height:el.getHeight(!Ext.isIE||Ext.isStrict)});}});var index=0;Ext.iterate(store.data.items,function(item){var id=item.get(idProperty),el=elCache[id];var column=index%columns,row=Math.floor(index/columns),top=row*itemHeight,left=column*itemWidth;newPositions[id]={top:top,left:left};index++;},this);var startTime=new Date(),duration=this.duration,dataviewID=this.dataviewID;var doAnimate=function(){var elapsed=new Date()-startTime,fraction=elapsed/duration;if(fraction>=1){for(var id in newPositions){Ext.fly(dataviewID+'-'+id).applyStyles({top:newPositions[id].top+"px",left:newPositions[id].left+"px"});}
Ext.TaskManager.stop(task);}else{for(var id in newPositions){if(!previous[id])continue;var oldPos=oldPositions[id],newPos=newPositions[id],oldTop=oldPos.top,newTop=newPos.top,oldLeft=oldPos.left,newLeft=newPos.left,diffTop=fraction*Math.abs(oldTop-newTop),diffLeft=fraction*Math.abs(oldLeft-newLeft),midTop=oldTop>newTop?oldTop-diffTop:oldTop+diffTop,midLeft=oldLeft>newLeft?oldLeft-diffLeft:oldLeft+diffLeft;Ext.fly(dataviewID+'-'+id).applyStyles({top:midTop+"px",left:midLeft+"px"});}}};var task={run:doAnimate,interval:20,scope:this};Ext.TaskManager.start(task);var count=0;for(var k in added){count++;}
if(Ext.global.console&&Ext.global.console.log){Ext.global.console.log('added:',count);}
Ext.iterate(added,function(id,item){Ext.fly(this.dataviewID+'-'+item.get(this.idProperty)).applyStyles({top:newPositions[item.get(this.idProperty)].top+"px",left:newPositions[item.get(this.idProperty)].left+"px"});Ext.fly(this.dataviewID+'-'+item.get(this.idProperty)).animate({remove:false,duration:duration,opacity:1});},this);this.cacheStoreData(store);},this);},cacheStoreData:function(store){this.cachedStoreData={};store.each(function(record){this.cachedStoreData[record.get(this.idProperty)]=record;},this);},getExisting:function(){return this.cachedStoreData;},getExistingCount:function(){var count=0,items=this.getExisting();for(var k in items)count++;return count;},getAdded:function(store){var added={};store.each(function(record){if(this.cachedStoreData[record.get(this.idProperty)]==undefined){added[record.get(this.idProperty)]=record;}},this);return added;},getRemoved:function(store){var removed=[];for(var id in this.cachedStoreData){if(store.findExact(this.idProperty,Number(id))==-1){removed.push(this.cachedStoreData[id]);}}
return removed;},getRemaining:function(store){var remaining={};store.each(function(record){if(this.cachedStoreData[record.get(this.idProperty)]!=undefined){remaining[record.get(this.idProperty)]=record;}},this);return remaining;}});Ext.define('Ext.ux.DataTip',function(DataTip){function onHostRender(){var e=this.isXType('panel')?this.body:this.el;if(this.dataTip.renderToTarget){this.dataTip.render(e);}
this.dataTip.setTarget(e);}
function updateTip(tip,data){if(tip.rendered){if(tip.host.fireEvent('beforeshowtip',tip.eventHost,tip,data)===false){return false;}
tip.update(data);}else{if(Ext.isString(data)){tip.html=data;}else{tip.data=data;}}}
function beforeViewTipShow(tip){var rec=this.view.getRecord(tip.triggerElement),data;if(rec){data=tip.initialConfig.data?Ext.apply(tip.initialConfig.data,rec.data):rec.data;return updateTip(tip,data);}else{return false;}}
function beforeFormTipShow(tip){var field=Ext.getCmp(tip.triggerElement.id);if(field&&(field.tooltip||tip.tpl)){return updateTip(tip,field.tooltip||field);}else{return false;}}
return{extend:'Ext.tip.ToolTip',mixins:{plugin:'Ext.plugin.Abstract'},alias:'plugin.datatip',lockableScope:'both',constructor:function(config){var me=this;me.callParent([config]);me.mixins.plugin.constructor.call(me,config);},init:function(host){var me=this;me.mixins.plugin.init.call(me,host);host.dataTip=me;me.host=host;if(host.isXType('tablepanel')){me.view=host.getView();if(host.ownerLockable){me.host=host.ownerLockable;}
me.delegate=me.delegate||me.view.rowSelector;me.on('beforeshow',beforeViewTipShow);}else if(host.isXType('dataview')){me.view=me.host;me.delegate=me.delegate||host.itemSelector;me.on('beforeshow',beforeViewTipShow);}else if(host.isXType('form')){me.delegate='.'+Ext.form.Labelable.prototype.formItemCls;me.on('beforeshow',beforeFormTipShow);}else if(host.isXType('combobox')){me.view=host.getPicker();me.delegate=me.delegate||me.view.getItemSelector();me.on('beforeshow',beforeViewTipShow);}
if(host.rendered){onHostRender.call(host);}else{host.onRender=Ext.Function.createSequence(host.onRender,onHostRender);}}};});Ext.define('Ext.ux.CellDragDrop',{extend:'Ext.plugin.Abstract',alias:'plugin.celldragdrop',uses:['Ext.view.DragZone'],enforceType:false,applyEmptyText:false,emptyText:'',dropBackgroundColor:'green',noDropBackgroundColor:'red',dragText:'{0} selected row{1}',ddGroup:"GridDD",enableDrop:true,enableDrag:true,containerScroll:false,init:function(view){var me=this;view.on('render',me.onViewRender,me,{single:true});},destroy:function(){var me=this;Ext.destroy(me.dragZone,me.dropZone);},enable:function(){var me=this;if(me.dragZone){me.dragZone.unlock();}
if(me.dropZone){me.dropZone.unlock();}
me.callParent();},disable:function(){var me=this;if(me.dragZone){me.dragZone.lock();}
if(me.dropZone){me.dropZone.lock();}
me.callParent();},onViewRender:function(view){var me=this,scrollEl;if(me.enableDrag){if(me.containerScroll){scrollEl=view.getEl();}
me.dragZone=new Ext.view.DragZone({view:view,ddGroup:me.dragGroup||me.ddGroup,dragText:me.dragText,containerScroll:me.containerScroll,scrollEl:scrollEl,getDragData:function(e){var view=this.view,item=e.getTarget(view.getItemSelector()),record=view.getRecord(item),cell=e.getTarget(view.getCellSelector()),dragEl,header;if(item){dragEl=document.createElement('div');dragEl.className='x-form-text';dragEl.appendChild(document.createTextNode(cell.textContent||cell.innerText));header=view.getHeaderByCell(cell);return{event:new Ext.EventObjectImpl(e),ddel:dragEl,item:e.target,columnName:header.dataIndex,record:record};}},onInitDrag:function(x,y){var self=this,data=self.dragData,view=self.view,selectionModel=view.getSelectionModel(),record=data.record,el=data.ddel;if(!selectionModel.isSelected(record)){selectionModel.select(record,true);}
Ext.fly(self.ddel).update(el.textContent||el.innerText);self.proxy.update(self.ddel);self.onStartDrag(x,y);return true;}});}
if(me.enableDrop){me.dropZone=new Ext.dd.DropZone(view.el,{view:view,ddGroup:me.dropGroup||me.ddGroup,containerScroll:true,getTargetFromEvent:function(e){var self=this,view=self.view,cell=e.getTarget(view.cellSelector),row,header;if(cell){row=view.findItemByChild(cell);header=view.getHeaderByCell(cell);if(row&&header){return{node:cell,record:view.getRecord(row),columnName:header.dataIndex};}}},onNodeEnter:function(target,dd,e,dragData){var self=this,destType=target.record.getField(target.columnName).type.toUpperCase(),sourceType=dragData.record.getField(dragData.columnName).type.toUpperCase();delete self.dropOK;if(!target||target.node===dragData.item.parentNode){return;}
if(me.enforceType&&destType!==sourceType){self.dropOK=false;if(me.noDropCls){Ext.fly(target.node).addCls(me.noDropCls);}else{Ext.fly(target.node).applyStyles({backgroundColor:me.noDropBackgroundColor});}
return false;}
self.dropOK=true;if(me.dropCls){Ext.fly(target.node).addCls(me.dropCls);}else{Ext.fly(target.node).applyStyles({backgroundColor:me.dropBackgroundColor});}},onNodeOver:function(target,dd,e,dragData){return this.dropOK?this.dropAllowed:this.dropNotAllowed;},onNodeOut:function(target,dd,e,dragData){var cls=this.dropOK?me.dropCls:me.noDropCls;if(cls){Ext.fly(target.node).removeCls(cls);}else{Ext.fly(target.node).applyStyles({backgroundColor:''});}},onNodeDrop:function(target,dd,e,dragData){if(this.dropOK){target.record.set(target.columnName,dragData.record.get(dragData.columnName));if(me.applyEmptyText){dragData.record.set(dragData.columnName,me.emptyText);}
return true;}},onCellDrop:Ext.emptyFn});}}});Ext.define('Ext.ux.BoxReorderer',{requires:['Ext.dd.DD'],mixins:{observable:'Ext.util.Observable'},itemSelector:'.x-box-item',animate:100,constructor:function(){this.mixins.observable.constructor.apply(this,arguments);},init:function(container){var me=this;me.container=container;me.animatePolicy={};me.animatePolicy[container.getLayout().names.x]=true;me.container.on({scope:me,boxready:me.onBoxReady,beforedestroy:me.onContainerDestroy});},onContainerDestroy:function(){var dd=this.dd;if(dd){dd.unreg();this.dd=null;}},onBoxReady:function(){var me=this,layout=me.container.getLayout(),names=layout.names,dd;dd=me.dd=new Ext.dd.DD(layout.innerCt,me.container.id+'-reorderer');Ext.apply(dd,{animate:me.animate,reorderer:me,container:me.container,getDragCmp:me.getDragCmp,clickValidator:Ext.Function.createInterceptor(dd.clickValidator,me.clickValidator,me,false),onMouseDown:me.onMouseDown,startDrag:me.startDrag,onDrag:me.onDrag,endDrag:me.endDrag,getNewIndex:me.getNewIndex,doSwap:me.doSwap,findReorderable:me.findReorderable});dd.dim=names.width;dd.startAttr=names.beforeX;dd.endAttr=names.afterX;},getDragCmp:function(e){return this.container.getChildByElement(e.getTarget(this.itemSelector,10));},clickValidator:function(e){var cmp=this.getDragCmp(e);return!!(cmp&&cmp.reorderable!==false);},onMouseDown:function(e){var me=this,container=me.container,containerBox,cmpEl,cmpBox;me.dragCmp=me.getDragCmp(e);if(me.dragCmp){cmpEl=me.dragCmp.getEl();me.startIndex=me.curIndex=container.items.indexOf(me.dragCmp);cmpBox=cmpEl.getBox();me.lastPos=cmpBox[me.startAttr];containerBox=container.el.getBox();if(me.dim==='width'){me.minX=containerBox.left;me.maxX=containerBox.right-cmpBox.width;me.minY=me.maxY=cmpBox.top;me.deltaX=e.getX()-cmpBox.left;}else{me.minY=containerBox.top;me.maxY=containerBox.bottom-cmpBox.height;me.minX=me.maxX=cmpBox.left;me.deltaY=e.getY()-cmpBox.top;}
me.constrainY=me.constrainX=true;}},startDrag:function(){var me=this,dragCmp=me.dragCmp;if(dragCmp){dragCmp.setPosition=Ext.emptyFn;dragCmp.animate=false;if(me.animate){me.container.getLayout().animatePolicy=me.reorderer.animatePolicy;}
me.dragElId=dragCmp.getEl().id;me.reorderer.fireEvent('StartDrag',me,me.container,dragCmp,me.curIndex);dragCmp.suspendEvents();dragCmp.disabled=true;dragCmp.el.setStyle('zIndex',100);}else{me.dragElId=null;}},findReorderable:function(newIndex){var me=this,items=me.container.items,newItem;if(items.getAt(newIndex).reorderable===false){newItem=items.getAt(newIndex);if(newIndex>me.startIndex){while(newItem&&newItem.reorderable===false){newIndex++;newItem=items.getAt(newIndex);}}else{while(newItem&&newItem.reorderable===false){newIndex--;newItem=items.getAt(newIndex);}}}
newIndex=Math.min(Math.max(newIndex,0),items.getCount()-1);if(items.getAt(newIndex).reorderable===false){return-1;}
return newIndex;},doSwap:function(newIndex){var me=this,items=me.container.items,container=me.container,wasRoot=me.container._isLayoutRoot,orig,dest,tmpIndex;newIndex=me.findReorderable(newIndex);if(newIndex===-1){return;}
me.reorderer.fireEvent('ChangeIndex',me,container,me.dragCmp,me.startIndex,newIndex);orig=items.getAt(me.curIndex);dest=items.getAt(newIndex);items.remove(orig);tmpIndex=Math.min(Math.max(newIndex,0),items.getCount()-1);items.insert(tmpIndex,orig);items.remove(dest);items.insert(me.curIndex,dest);container._isLayoutRoot=true;container.updateLayout();container._isLayoutRoot=wasRoot;me.curIndex=newIndex;},onDrag:function(e){var me=this,newIndex;newIndex=me.getNewIndex(e.getPoint());if((newIndex!==undefined)){me.reorderer.fireEvent('Drag',me,me.container,me.dragCmp,me.startIndex,me.curIndex);me.doSwap(newIndex);}},endDrag:function(e){if(e){e.stopEvent();}
var me=this,layout=me.container.getLayout(),temp;if(me.dragCmp){delete me.dragElId;delete me.dragCmp.setPosition;me.dragCmp.animate=true;me.dragCmp.lastBox[layout.names.x]=me.dragCmp.getPosition(true)[layout.names.widthIndex];me.container._isLayoutRoot=true;me.container.updateLayout();me.container._isLayoutRoot=undefined;temp=Ext.fx.Manager.getFxQueue(me.dragCmp.el.id)[0];if(temp){temp.on({afteranimate:me.reorderer.afterBoxReflow,scope:me});}
else{Ext.Function.defer(me.reorderer.afterBoxReflow,1,me);}
if(me.animate){delete layout.animatePolicy;}
me.reorderer.fireEvent('drop',me,me.container,me.dragCmp,me.startIndex,me.curIndex);}},afterBoxReflow:function(){var me=this;me.dragCmp.el.setStyle('zIndex','');me.dragCmp.disabled=false;me.dragCmp.resumeEvents();},getNewIndex:function(pointerPos){var me=this,dragEl=me.getDragEl(),dragBox=Ext.fly(dragEl).getBox(),targetEl,targetBox,targetMidpoint,i=0,it=me.container.items.items,ln=it.length,lastPos=me.lastPos;me.lastPos=dragBox[me.startAttr];for(;i<ln;i++){targetEl=it[i].getEl();if(targetEl.is(me.reorderer.itemSelector)){targetBox=targetEl.getBox();targetMidpoint=targetBox[me.startAttr]+(targetBox[me.dim]>>1);if(i<me.curIndex){if((dragBox[me.startAttr]<lastPos)&&(dragBox[me.startAttr]<(targetMidpoint-5))){return i;}}else if(i>me.curIndex){if((dragBox[me.startAttr]>lastPos)&&(dragBox[me.endAttr]>(targetMidpoint+5))){return i;}}}}}});Ext.define('Ext.ux.TreePicker',{extend:'Ext.form.field.Picker',xtype:'treepicker',uses:['Ext.tree.Panel'],triggerCls:Ext.baseCSSPrefix+'form-arrow-trigger',config:{store:null,displayField:null,columns:null,selectOnTab:true,maxPickerHeight:300,minPickerHeight:100},editable:false,initComponent:function(){var me=this;me.callParent(arguments);me.mon(me.store,{scope:me,load:me.onLoad,update:me.onUpdate});},createPicker:function(){var me=this,picker=new Ext.tree.Panel({shrinkWrapDock:2,store:me.store,floating:true,displayField:me.displayField,columns:me.columns,minHeight:me.minPickerHeight,maxHeight:me.maxPickerHeight,manageHeight:false,shadow:false,listeners:{scope:me,itemclick:me.onItemClick},viewConfig:{listeners:{scope:me,render:me.onViewRender}}}),view=picker.getView();if(Ext.isIE9&&Ext.isStrict){view.on({scope:me,highlightitem:me.repaintPickerView,unhighlightitem:me.repaintPickerView,afteritemexpand:me.repaintPickerView,afteritemcollapse:me.repaintPickerView});}
return picker;},onViewRender:function(view){view.getEl().on('keypress',this.onPickerKeypress,this);},repaintPickerView:function(){var style=this.picker.getView().getEl().dom.style;style.display=style.display;},onItemClick:function(view,record,node,rowIndex,e){this.selectItem(record);},onPickerKeypress:function(e,el){var key=e.getKey();if(key===e.ENTER||(key===e.TAB&&this.selectOnTab)){this.selectItem(this.picker.getSelectionModel().getSelection()[0]);}},selectItem:function(record){var me=this;me.setValue(record.getId());me.fireEvent('select',me,record);me.collapse();},onExpand:function(){var me=this,picker=me.picker,store=picker.store,value=me.value,node;if(value){node=store.getNodeById(value);}
if(!node){node=store.getRoot();}
picker.selectPath(node.getPath());},setValue:function(value){var me=this,record;me.value=value;if(me.store.loading){return me;}
record=value?me.store.getNodeById(value):me.store.getRoot();if(value===undefined){record=me.store.getRoot();me.value=record.getId();}else{record=me.store.getNodeById(value);}
me.setRawValue(record?record.get(me.displayField):'');return me;},getSubmitValue:function(){return this.value;},getValue:function(){return this.value;},onLoad:function(){var value=this.value;if(value){this.setValue(value);}},onUpdate:function(store,rec,type,modifiedFieldNames){var display=this.displayField;if(type==='edit'&&modifiedFieldNames&&Ext.Array.contains(modifiedFieldNames,display)&&this.value===rec.getId()){this.setRawValue(rec.get(display));}}});Ext.define('Ext.ux.ToolbarDroppable',{constructor:function(config){Ext.apply(this,config);},init:function(toolbar){this.toolbar=toolbar;this.toolbar.on({scope:this,render:this.createDropTarget});},createDropTarget:function(){this.dropTarget=Ext.create('Ext.dd.DropTarget',this.toolbar.getEl(),{notifyOver:Ext.Function.bind(this.notifyOver,this),notifyDrop:Ext.Function.bind(this.notifyDrop,this)});},addDDGroup:function(ddGroup){this.dropTarget.addToGroup(ddGroup);},calculateEntryIndex:function(e){var entryIndex=0,toolbar=this.toolbar,items=toolbar.items.items,count=items.length,xHover=e.getXY()[0],index=0,el,xTotal,width,midpoint;for(;index<count;index++){el=items[index].getEl();xTotal=el.getXY()[0];width=el.getWidth();midpoint=xTotal+width/2;if(xHover<midpoint){entryIndex=index;break;}else{entryIndex=index+1;}}
return entryIndex;},canDrop:function(data){return true;},notifyOver:function(dragSource,event,data){return this.canDrop.apply(this,arguments)?this.dropTarget.dropAllowed:this.dropTarget.dropNotAllowed;},notifyDrop:function(dragSource,event,data){var canAdd=this.canDrop(dragSource,event,data),tbar=this.toolbar;if(canAdd){var entryIndex=this.calculateEntryIndex(event);tbar.insert(entryIndex,this.createItem(data));tbar.doLayout();this.afterLayout();}
return canAdd;},createItem:function(data){Ext.Error.raise("The createItem method must be implemented in the ToolbarDroppable plugin");},afterLayout:Ext.emptyFn});Ext.ns('Ext.ux');Ext.define('Ext.ux.TabScrollerMenu',{alias:'plugin.tabscrollermenu',requires:['Ext.menu.Menu'],pageSize:10,maxText:15,menuPrefixText:'Items',constructor:function(config){Ext.apply(this,config);},init:function(tabPanel){var me=this;me.tabPanel=tabPanel;tabPanel.on({render:function(){me.tabBar=tabPanel.tabBar;me.layout=me.tabBar.layout;me.layout.overflowHandler.handleOverflow=Ext.Function.bind(me.showButton,me);me.layout.overflowHandler.clearOverflow=Ext.Function.createSequence(me.layout.overflowHandler.clearOverflow,me.hideButton,me);},destroy:me.destroy,scope:me,single:true});},showButton:function(){var me=this,result=Ext.getClass(me.layout.overflowHandler).prototype.handleOverflow.apply(me.layout.overflowHandler,arguments),button=me.menuButton;if(me.tabPanel.items.getCount()>1){if(!button){button=me.menuButton=me.tabBar.body.createChild({cls:Ext.baseCSSPrefix+'tab-tabmenu-right'},me.tabBar.body.child('.'+Ext.baseCSSPrefix+'box-scroller-right'));button.addClsOnOver(Ext.baseCSSPrefix+'tab-tabmenu-over');button.on('click',me.showTabsMenu,me);}
button.setVisibilityMode(Ext.dom.Element.DISPLAY);button.show();result.reservedSpace+=button.getWidth();}else{me.hideButton();}
return result;},hideButton:function(){var me=this;if(me.menuButton){me.menuButton.hide();}},getPageSize:function(){return this.pageSize;},setPageSize:function(pageSize){this.pageSize=pageSize;},getMaxText:function(){return this.maxText;},setMaxText:function(t){this.maxText=t;},getMenuPrefixText:function(){return this.menuPrefixText;},setMenuPrefixText:function(t){this.menuPrefixText=t;},showTabsMenu:function(e){var me=this;if(me.tabsMenu){me.tabsMenu.removeAll();}else{me.tabsMenu=new Ext.menu.Menu();}
me.generateTabMenuItems();var target=Ext.get(e.getTarget()),xy=target.getXY();xy[1]+=24;me.tabsMenu.showAt(xy);},generateTabMenuItems:function(){var me=this,tabPanel=me.tabPanel,curActive=tabPanel.getActiveTab(),allItems=tabPanel.items.getRange(),pageSize=me.getPageSize(),tabsMenu=me.tabsMenu,totalItems,numSubMenus,remainder,i,curPage,menuItems,x,item,start,index;tabsMenu.suspendLayouts();allItems=Ext.Array.filter(allItems,function(item){if(item.id==curActive.id){return false;}
return item.hidden?!!item.hiddenByLayout:true;});totalItems=allItems.length;numSubMenus=Math.floor(totalItems/pageSize);remainder=totalItems%pageSize;if(totalItems>pageSize){for(i=0;i<numSubMenus;i++){curPage=(i+1)*pageSize;menuItems=[];for(x=0;x<pageSize;x++){index=x+curPage-pageSize;item=allItems[index];menuItems.push(me.autoGenMenuItem(item));}
tabsMenu.add({text:me.getMenuPrefixText()+' '+(curPage-pageSize+1)+' - '+curPage,menu:menuItems});}
if(remainder>0){start=numSubMenus*pageSize;menuItems=[];for(i=start;i<totalItems;i++){item=allItems[i];menuItems.push(me.autoGenMenuItem(item));}
me.tabsMenu.add({text:me.menuPrefixText+' '+(start+1)+' - '+(start+menuItems.length),menu:menuItems});}}else{for(i=0;i<totalItems;++i){tabsMenu.add(me.autoGenMenuItem(allItems[i]));}}
tabsMenu.resumeLayouts(true);},autoGenMenuItem:function(item){var maxText=this.getMaxText(),text=Ext.util.Format.ellipsis(item.title,maxText);return{text:text,handler:this.showTabFromMenu,scope:this,disabled:item.disabled,tabToShow:item,iconCls:item.iconCls};},showTabFromMenu:function(menuItem){this.tabPanel.setActiveTab(menuItem.tabToShow);},destroy:function(){Ext.destroy(this.tabsMenu,this.menuButton);}});Ext.define('Ext.ux.TabReorderer',{extend:'Ext.ux.BoxReorderer',alias:'plugin.tabreorderer',itemSelector:'.'+Ext.baseCSSPrefix+'tab',init:function(tabPanel){var me=this;me.callParent([tabPanel.getTabBar()]);tabPanel.onAdd=Ext.Function.createSequence(tabPanel.onAdd,me.onAdd);},onBoxReady:function(){var tabs,len,i=0,tab;this.callParent(arguments);for(tabs=this.container.items.items,len=tabs.length;i<len;i++){tab=tabs[i];if(tab.card){tab.reorderable=tab.card.reorderable;}}},onAdd:function(card,index){card.tab.reorderable=card.reorderable;},afterBoxReflow:function(){var me=this;Ext.ux.BoxReorderer.prototype.afterBoxReflow.apply(me,arguments);if(me.dragCmp){me.container.tabPanel.setActiveTab(me.dragCmp.card);me.container.tabPanel.move(me.startIndex,me.curIndex);}}});Ext.define('Ext.ux.TabCloseMenu',{extend:'Ext.plugin.Abstract',alias:'plugin.tabclosemenu',mixins:{observable:'Ext.util.Observable'},closeTabText:'Close Tab',showCloseOthers:true,closeOthersTabsText:'Close Other Tabs',showCloseAll:true,closeAllTabsText:'Close All Tabs',extraItemsHead:null,extraItemsTail:null,constructor:function(config){this.callParent([config]);this.mixins.observable.constructor.call(this,config);},init:function(tabpanel){this.tabPanel=tabpanel;this.tabBar=tabpanel.down("tabbar");this.mon(this.tabPanel,{scope:this,afterlayout:this.onAfterLayout,single:true});},onAfterLayout:function(){this.mon(this.tabBar.el,{scope:this,contextmenu:this.onContextMenu,delegate:'.x-tab'});},destroy:function(){this.callParent();Ext.destroy(this.menu);},onContextMenu:function(event,target){var me=this,menu=me.createMenu(),disableAll=true,disableOthers=true,tab=me.tabBar.getChildByElement(target),index=me.tabBar.items.indexOf(tab);me.item=me.tabPanel.getComponent(index);menu.child('#close').setDisabled(!me.item.closable);if(me.showCloseAll||me.showCloseOthers){me.tabPanel.items.each(function(item){if(item.closable){disableAll=false;if(item!==me.item){disableOthers=false;return false;}}
return true;});if(me.showCloseAll){menu.child('#closeAll').setDisabled(disableAll);}
if(me.showCloseOthers){menu.child('#closeOthers').setDisabled(disableOthers);}}
event.preventDefault();me.fireEvent('beforemenu',menu,me.item,me);menu.showAt(event.getXY());},createMenu:function(){var me=this;if(!me.menu){var items=[{itemId:'close',text:me.closeTabText,scope:me,handler:me.onClose}];if(me.showCloseAll||me.showCloseOthers){items.push('-');}
if(me.showCloseOthers){items.push({itemId:'closeOthers',text:me.closeOthersTabsText,scope:me,handler:me.onCloseOthers});}
if(me.showCloseAll){items.push({itemId:'closeAll',text:me.closeAllTabsText,scope:me,handler:me.onCloseAll});}
if(me.extraItemsHead){items=me.extraItemsHead.concat(items);}
if(me.extraItemsTail){items=items.concat(me.extraItemsTail);}
me.menu=Ext.create('Ext.menu.Menu',{items:items,listeners:{hide:me.onHideMenu,scope:me}});}
return me.menu;},onHideMenu:function(){var me=this;me.fireEvent('aftermenu',me.menu,me);},onClose:function(){this.tabPanel.remove(this.item);},onCloseOthers:function(){this.doClose(true);},onCloseAll:function(){this.doClose(false);},doClose:function(excludeActive){var items=[];this.tabPanel.items.each(function(item){if(item.closable){if(!excludeActive||item!==this.item){items.push(item);}}},this);Ext.suspendLayouts();Ext.Array.forEach(items,function(item){this.tabPanel.remove(item);},this);Ext.resumeLayouts(true);}});Ext.define('Ext.ux.Spotlight',{baseCls:'x-spotlight',animate:true,duration:250,easing:null,active:false,constructor:function(config){Ext.apply(this,config);},createElements:function(){var me=this,baseCls=me.baseCls,body=Ext.getBody();me.right=body.createChild({cls:baseCls});me.left=body.createChild({cls:baseCls});me.top=body.createChild({cls:baseCls});me.bottom=body.createChild({cls:baseCls});me.all=Ext.create('Ext.CompositeElement',[me.right,me.left,me.top,me.bottom]);},show:function(el,callback,scope){var me=this;me.el=Ext.get(el);if(!me.right){me.createElements();}
if(!me.active){me.all.setDisplayed('');me.active=true;Ext.on('resize',me.syncSize,me);me.applyBounds(me.animate,false);}else{me.applyBounds(false,false);}},hide:function(callback,scope){var me=this;Ext.un('resize',me.syncSize,me);me.applyBounds(me.animate,true);},syncSize:function(){this.applyBounds(false,false);},applyBounds:function(animate,reverse){var me=this,box=me.el.getBox(),viewWidth=Ext.Element.getViewportWidth(),viewHeight=Ext.Element.getViewportHeight(),i=0,config=false,from,to,clone;from={right:{x:box.right,y:viewHeight,width:(viewWidth-box.right),height:0},left:{x:0,y:0,width:box.x,height:0},top:{x:viewWidth,y:0,width:0,height:box.y},bottom:{x:0,y:(box.y+box.height),width:0,height:(viewHeight-(box.y+box.height))+'px'}};to={right:{x:box.right,y:box.y,width:(viewWidth-box.right)+'px',height:(viewHeight-box.y)+'px'},left:{x:0,y:0,width:box.x+'px',height:(box.y+box.height)+'px'},top:{x:box.x,y:0,width:(viewWidth-box.x)+'px',height:box.y+'px'},bottom:{x:0,y:(box.y+box.height),width:(box.x+box.width)+'px',height:(viewHeight-(box.y+box.height))+'px'}};if(reverse){clone=Ext.clone(from);from=to;to=clone;}
if(animate){Ext.Array.forEach(['right','left','top','bottom'],function(side){me[side].setBox(from[side]);me[side].animate({duration:me.duration,easing:me.easing,to:to[side]});},this);}else{Ext.Array.forEach(['right','left','top','bottom'],function(side){me[side].setBox(Ext.apply(from[side],to[side]));me[side].repaint();},this);}},destroy:function(){var me=this;Ext.destroy(me.right,me.left,me.top,me.bottom);delete me.el;delete me.all;}});Ext.define('Ext.ux.SlidingPager',{requires:['Ext.slider.Single','Ext.slider.Tip'],constructor:function(config){if(config){Ext.apply(this,config);}},init:function(pbar){var idx=pbar.items.indexOf(pbar.child("#inputItem")),slider;Ext.each(pbar.items.getRange(idx-2,idx+2),function(c){c.hide();});slider=Ext.create('Ext.slider.Single',{width:114,minValue:1,maxValue:1,hideLabel:true,tipText:function(thumb){return Ext.String.format('Page <b>{0}</b> of <b>{1}</b>',thumb.value,thumb.slider.maxValue);},listeners:{changecomplete:function(s,v){pbar.store.loadPage(v);}}});pbar.insert(idx+1,slider);pbar.on({change:function(pb,data){slider.setMaxValue(data.pageCount);slider.setValue(data.currentPage);}});}});Ext.define('Ext.ux.RowExpander',{extend:'Ext.grid.plugin.RowExpander'});Ext.define('Ext.ux.ProgressBarPager',{requires:['Ext.ProgressBar'],width:225,defaultText:'Loading...',defaultAnimCfg:{duration:1000,easing:'bounceOut'},constructor:function(config){if(config){Ext.apply(this,config);}},init:function(parent){var displayItem;if(parent.displayInfo){this.parent=parent;displayItem=parent.child("#displayItem");if(displayItem){parent.remove(displayItem,true);}
this.progressBar=Ext.create('Ext.ProgressBar',{text:this.defaultText,width:this.width,animate:this.defaultAnimCfg,style:{cursor:'pointer'},listeners:{el:{scope:this,click:this.handleProgressBarClick}}});parent.displayItem=this.progressBar;parent.add(parent.displayItem);Ext.apply(parent,this.parentOverrides);}},handleProgressBarClick:function(e){var parent=this.parent,displayItem=parent.displayItem,box=this.progressBar.getBox(),xy=e.getXY(),position=xy[0]-box.x,pages=Math.ceil(parent.store.getTotalCount()/parent.pageSize),newPage=Math.max(Math.ceil(position/(displayItem.width/pages)),1);parent.store.loadPage(newPage);},parentOverrides:{updateInfo:function(){if(this.displayItem){var count=this.store.getCount(),pageData=this.getPageData(),message=count===0?this.emptyMsg:Ext.String.format(this.displayMsg,pageData.fromRecord,pageData.toRecord,this.store.getTotalCount()),percentage=pageData.pageCount>0?(pageData.currentPage/pageData.pageCount):0;this.displayItem.updateProgress(percentage,message,this.animate||this.defaultAnimConfig);}}}});Ext.define('Ext.ux.PreviewPlugin',{extend:'Ext.plugin.Abstract',alias:'plugin.preview',requires:['Ext.grid.feature.RowBody'],hideBodyCls:'x-grid-row-body-hidden',bodyField:'',previewExpanded:true,setCmp:function(target){this.callParent(arguments);var me=this,grid=me.cmp=target.isXType('gridview')?target.grid:target,bodyField=me.bodyField,hideBodyCls=me.hideBodyCls,feature=Ext.create('Ext.grid.feature.RowBody',{grid:grid,getAdditionalData:function(data,idx,model,rowValues){var getAdditionalData=Ext.grid.feature.RowBody.prototype.getAdditionalData,additionalData={rowBody:data[bodyField],rowBodyCls:grid.getView().previewExpanded?'':hideBodyCls};if(Ext.isFunction(getAdditionalData)){Ext.apply(additionalData,getAdditionalData.apply(this,arguments));}
return additionalData;}}),initFeature=function(grid,view){view.previewExpanded=me.previewExpanded;view.featuresMC.add(feature);feature.init(grid);};if(grid.view){initFeature(grid,grid.view);}
else{grid.on({viewcreated:initFeature,single:true});}},toggleExpanded:function(expanded){var grid=this.getCmp(),view=grid&&grid.getView(),bufferedRenderer=view.bufferedRenderer,scrollManager=view.scrollManager;if(grid&&view&&expanded!==view.previewExpanded){this.previewExpanded=view.previewExpanded=!!expanded;view.refreshView();if(scrollManager){if(bufferedRenderer){bufferedRenderer.stretchView(view,bufferedRenderer.getScrollHeight(true));}else{scrollManager.refresh(true);}}}}});Ext.define('Ext.ux.LiveSearchGridPanel',{extend:'Ext.grid.Panel',requires:['Ext.toolbar.TextItem','Ext.form.field.Checkbox','Ext.form.field.Text','Ext.ux.statusbar.StatusBar'],searchValue:null,indexes:[],currentIndex:null,searchRegExp:null,caseSensitive:false,regExpMode:false,matchCls:'x-livesearch-match',defaultStatusText:'Nothing Found',initComponent:function(){var me=this;me.tbar=['Search',{xtype:'textfield',name:'searchField',hideLabel:true,width:200,listeners:{change:{fn:me.onTextFieldChange,scope:this,buffer:500}}},{xtype:'button',text:'&lt;',tooltip:'Find Previous Row',handler:me.onPreviousClick,scope:me},{xtype:'button',text:'&gt;',tooltip:'Find Next Row',handler:me.onNextClick,scope:me},'-',{xtype:'checkbox',hideLabel:true,margin:'0 0 0 4px',handler:me.regExpToggle,scope:me},'Regular expression',{xtype:'checkbox',hideLabel:true,margin:'0 0 0 4px',handler:me.caseSensitiveToggle,scope:me},'Case sensitive'];me.bbar=Ext.create('Ext.ux.StatusBar',{defaultText:me.defaultStatusText,name:'searchStatusBar'});me.callParent(arguments);},afterRender:function(){var me=this;me.callParent(arguments);me.textField=me.down('textfield[name=searchField]');me.statusBar=me.down('statusbar[name=searchStatusBar]');},tagsRe:/<[^>]*>/gm,tagsProtect:'\x0f',getSearchValue:function(){var me=this,value=me.textField.getValue();if(value===''){return null;}
if(!me.regExpMode){value=Ext.String.escapeRegex(value);}else{try{new RegExp(value);}catch(error){me.statusBar.setStatus({text:error.message,iconCls:'x-status-error'});return null;}
if(value==='^'||value==='$'){return null;}}
return value;},onTextFieldChange:function(){var me=this,count=0,view=me.view,cellSelector=view.cellSelector,innerSelector=view.innerSelector;view.refresh();me.statusBar.setStatus({text:me.defaultStatusText,iconCls:''});me.searchValue=me.getSearchValue();me.indexes=[];me.currentIndex=null;if(me.searchValue!==null){me.searchRegExp=new RegExp(me.getSearchValue(),'g'+(me.caseSensitive?'':'i'));me.store.each(function(record,idx){var td=Ext.fly(view.getNode(idx)).down(cellSelector),cell,matches,cellHTML;while(td){cell=td.down(innerSelector);matches=cell.dom.innerHTML.match(me.tagsRe);cellHTML=cell.dom.innerHTML.replace(me.tagsRe,me.tagsProtect);cellHTML=cellHTML.replace(me.searchRegExp,function(m){count+=1;if(Ext.Array.indexOf(me.indexes,idx)===-1){me.indexes.push(idx);}
if(me.currentIndex===null){me.currentIndex=idx;}
return'<span class="'+me.matchCls+'">'+m+'</span>';});Ext.each(matches,function(match){cellHTML=cellHTML.replace(me.tagsProtect,match);});cell.dom.innerHTML=cellHTML;td=td.next();}},me);if(me.currentIndex!==null){me.getSelectionModel().select(me.currentIndex);me.statusBar.setStatus({text:count+' matche(s) found.',iconCls:'x-status-valid'});}}
if(me.currentIndex===null){me.getSelectionModel().deselectAll();}
me.textField.focus();},onPreviousClick:function(){var me=this,idx;if((idx=Ext.Array.indexOf(me.indexes,me.currentIndex))!==-1){me.currentIndex=me.indexes[idx-1]||me.indexes[me.indexes.length-1];me.getSelectionModel().select(me.currentIndex);}},onNextClick:function(){var me=this,idx;if((idx=Ext.Array.indexOf(me.indexes,me.currentIndex))!==-1){me.currentIndex=me.indexes[idx+1]||me.indexes[0];me.getSelectionModel().select(me.currentIndex);}},caseSensitiveToggle:function(checkbox,checked){this.caseSensitive=checked;this.onTextFieldChange();},regExpToggle:function(checkbox,checked){this.regExpMode=checked;this.onTextFieldChange();}});Ext.define('Ext.ux.IFrame',{extend:'Ext.Component',alias:'widget.uxiframe',loadMask:'Loading...',src:'about:blank',renderTpl:['<iframe src="{src}" id="{id}-iframeEl" data-ref="iframeEl" name="{frameName}" width="100%" height="100%" frameborder="0"></iframe>'],childEls:['iframeEl'],initComponent:function(){this.callParent();this.frameName=this.frameName||this.id+'-frame';},initEvents:function(){var me=this;me.callParent();me.iframeEl.on('load',me.onLoad,me);},initRenderData:function(){return Ext.apply(this.callParent(),{src:this.src,frameName:this.frameName});},getBody:function(){var doc=this.getDoc();return doc.body||doc.documentElement;},getDoc:function(){try{return this.getWin().document;}catch(ex){return null;}},getWin:function(){var me=this,name=me.frameName,win=Ext.isIE?me.iframeEl.dom.contentWindow:window.frames[name];return win;},getFrame:function(){var me=this;return me.iframeEl.dom;},beforeDestroy:function(){this.cleanupListeners(true);this.callParent();},cleanupListeners:function(destroying){var doc,prop;if(this.rendered){try{doc=this.getDoc();if(doc){Ext.get(doc).un(this._docListeners);if(destroying){for(prop in doc){if(doc.hasOwnProperty&&doc.hasOwnProperty(prop)){delete doc[prop];}}}}}catch(e){}}},onLoad:function(){var me=this,doc=me.getDoc(),fn=me.onRelayedEvent;if(doc){try{Ext.get(doc).on(me._docListeners={mousedown:fn,mousemove:fn,mouseup:fn,click:fn,dblclick:fn,scope:me});}catch(e){}
Ext.get(this.getWin()).on('beforeunload',me.cleanupListeners,me);this.el.unmask();this.fireEvent('load',this);}else if(me.src){this.el.unmask();this.fireEvent('error',this);}},onRelayedEvent:function(event){var iframeEl=this.iframeEl,iframeXY=iframeEl.getTrueXY(),originalEventXY=event.getXY(),eventXY=event.getTrueXY();event.xy=[iframeXY[0]+eventXY[0],iframeXY[1]+eventXY[1]];event.injectEvent(iframeEl);event.xy=originalEventXY;},load:function(src){var me=this,text=me.loadMask,frame=me.getFrame();if(me.fireEvent('beforeload',me,src)!==false){if(text&&me.el){me.el.mask(text);}
frame.src=me.src=(src||me.src);}}});Ext.define('Ext.ux.GroupTabRenderer',{extend:'Ext.plugin.Abstract',alias:'plugin.grouptabrenderer',tableTpl:new Ext.XTemplate('<div id="{view.id}-body" class="'+Ext.baseCSSPrefix+'{view.id}-table '+Ext.baseCSSPrefix+'grid-table-resizer" style="{tableStyle}">','{%','values.view.renderRows(values.rows, values.viewStartIndex, out);','%}','</div>',{priority:5}),rowTpl:new Ext.XTemplate('{%','Ext.Array.remove(values.itemClasses, "',Ext.baseCSSPrefix+'grid-row");','var dataRowCls = values.recordIndex === -1 ? "" : " '+Ext.baseCSSPrefix+'grid-data-row";','%}','<div {[values.rowId ? ("id=\\"" + values.rowId + "\\"") : ""]} ','data-boundView="{view.id}" ','data-recordId="{record.internalId}" ','data-recordIndex="{recordIndex}" ','class="'+Ext.baseCSSPrefix+'grouptab-row {[values.itemClasses.join(" ")]} {[values.rowClasses.join(" ")]}{[dataRowCls]}" ','{rowAttr:attributes}>','<tpl for="columns">'+'{%','parent.view.renderCell(values, parent.record, parent.recordIndex, parent.rowIndex, xindex - 1, out, parent)','%}','</tpl>','</div>',{priority:5}),cellTpl:new Ext.XTemplate('{%values.tdCls = values.tdCls.replace(" '+Ext.baseCSSPrefix+'grid-cell "," ");%}','<div class="'+Ext.baseCSSPrefix+'grouptab-cell {tdCls}" {tdAttr}>','<div {unselectableAttr} class="'+Ext.baseCSSPrefix+'grid-cell-inner" style="text-align: {align}; {style};">{value}</div>','<div class="x-grouptabs-corner x-grouptabs-corner-top-left"></div>','<div class="x-grouptabs-corner x-grouptabs-corner-bottom-left"></div>','</div>',{priority:5}),selectors:{bodySelector:'div.'+Ext.baseCSSPrefix+'grid-table-resizer',nodeContainerSelector:'div.'+Ext.baseCSSPrefix+'grid-table-resizer',itemSelector:'div.'+Ext.baseCSSPrefix+'grouptab-row',rowSelector:'div.'+Ext.baseCSSPrefix+'grouptab-row',cellSelector:'div.'+Ext.baseCSSPrefix+'grouptab-cell',getCellSelector:function(header){return header?header.getCellSelector():this.cellSelector;}},init:function(grid){var view=grid.getView(),me=this;view.addTpl(me.tableTpl);view.addRowTpl(me.rowTpl);view.addCellTpl(me.cellTpl);Ext.apply(view,me.selectors);}});Ext.define('Ext.ux.GroupTabPanel',{extend:'Ext.Container',alias:'widget.grouptabpanel',requires:['Ext.tree.Panel','Ext.ux.GroupTabRenderer'],baseCls:Ext.baseCSSPrefix+'grouptabpanel',initComponent:function(config){var me=this;Ext.apply(me,config);me.store=me.createTreeStore();me.layout={type:'hbox',align:'stretch'};me.defaults={border:false};me.items=[{xtype:'treepanel',cls:'x-tree-panel x-grouptabbar',width:150,rootVisible:false,store:me.store,hideHeaders:true,animate:false,processEvent:Ext.emptyFn,border:false,plugins:[{ptype:'grouptabrenderer'}],viewConfig:{overItemCls:'',getRowClass:me.getRowClass},columns:[{xtype:'treecolumn',sortable:false,dataIndex:'text',flex:1,renderer:function(value,cell,node,idx1,idx2,store,tree){var cls='';if(node.parentNode&&node.parentNode.parentNode===null){cls+=' x-grouptab-first';if(node.previousSibling){cls+=' x-grouptab-prev';}
if(!node.get('expanded')||node.firstChild==null){cls+=' x-grouptab-last';}}else if(node.nextSibling===null){cls+=' x-grouptab-last';}else{cls+=' x-grouptab-center';}
if(node.data.activeTab){cls+=' x-active-tab';}
cell.tdCls='x-grouptab'+cls;return value;}}]},{xtype:'container',flex:1,layout:'card',activeItem:me.mainItem,baseCls:Ext.baseCSSPrefix+'grouptabcontainer',items:me.cards}];me.callParent(arguments);me.setActiveTab(me.activeTab);me.setActiveGroup(me.activeGroup);me.mon(me.down('treepanel').getSelectionModel(),'select',me.onNodeSelect,me);},getRowClass:function(node,rowIndex,rowParams,store){var cls='';if(node.data.activeGroup){cls+=' x-active-group';}
return cls;},onNodeSelect:function(selModel,node){var me=this,currentNode=me.store.getRootNode(),parent;if(node.parentNode&&node.parentNode.parentNode===null){parent=node;}else{parent=node.parentNode;}
if(me.setActiveGroup(parent.get('id'))===false||me.setActiveTab(node.get('id'))===false){return false;}
while(currentNode){currentNode.set('activeTab',false);currentNode.set('activeGroup',false);currentNode=currentNode.firstChild||currentNode.nextSibling||currentNode.parentNode.nextSibling;}
parent.set('activeGroup',true);parent.eachChild(function(child){child.set('activeGroup',true);});node.set('activeTab',true);selModel.view.refresh();},setActiveTab:function(cmp){var me=this,newTab=cmp,oldTab;if(Ext.isString(cmp)){newTab=Ext.getCmp(newTab);}
if(newTab===me.activeTab){return false;}
oldTab=me.activeTab;if(me.fireEvent('beforetabchange',me,newTab,oldTab)!==false){me.activeTab=newTab;if(me.rendered){me.down('container[baseCls='+Ext.baseCSSPrefix+'grouptabcontainer'+']').getLayout().setActiveItem(newTab);}
me.fireEvent('tabchange',me,newTab,oldTab);}
return true;},setActiveGroup:function(cmp){var me=this,newGroup=cmp,oldGroup;if(Ext.isString(cmp)){newGroup=Ext.getCmp(newGroup);}
if(newGroup===me.activeGroup){return true;}
oldGroup=me.activeGroup;if(me.fireEvent('beforegroupchange',me,newGroup,oldGroup)!==false){me.activeGroup=newGroup;me.fireEvent('groupchange',me,newGroup,oldGroup);}else{return false;}
return true;},createTreeStore:function(){var me=this,groups=me.prepareItems(me.items),data={text:'.',children:[]},cards=me.cards=[];me.activeGroup=me.activeGroup||0;Ext.each(groups,function(groupItem,idx){var leafItems=groupItem.items.items,rootItem=(leafItems[groupItem.mainItem]||leafItems[0]),groupRoot={children:[]};groupRoot.id=rootItem.id;groupRoot.text=rootItem.title;groupRoot.iconCls=rootItem.iconCls;groupRoot.expanded=true;groupRoot.activeGroup=(me.activeGroup===idx);groupRoot.activeTab=groupRoot.activeGroup?true:false;if(groupRoot.activeTab){me.activeTab=groupRoot.id;}
if(groupRoot.activeGroup){me.mainItem=groupItem.mainItem||0;me.activeGroup=groupRoot.id;}
Ext.each(leafItems,function(leafItem){if(leafItem.id!==groupRoot.id){var child={id:leafItem.id,leaf:true,text:leafItem.title,iconCls:leafItem.iconCls,activeGroup:groupRoot.activeGroup,activeTab:false};groupRoot.children.push(child);}
delete leafItem.title;delete leafItem.iconCls;cards.push(leafItem);});data.children.push(groupRoot);});return Ext.create('Ext.data.TreeStore',{fields:['id','text','activeGroup','activeTab'],root:{expanded:true},proxy:{type:'memory',data:data}});},getActiveTab:function(){return this.activeTab;},getActiveGroup:function(){return this.activeGroup;}});Ext.define('Ext.ux.GMapPanel',{extend:'Ext.panel.Panel',alias:'widget.gmappanel',requires:['Ext.window.MessageBox'],initComponent:function(){Ext.applyIf(this,{plain:true,gmapType:'map',border:false});this.callParent();},onBoxReady:function(){var center=this.center;this.callParent(arguments);if(center){if(center.geoCodeAddr){this.lookupCode(center.geoCodeAddr,center.marker);}else{this.createMap(center);}}else{Ext.Error.raise('center is required');}},createMap:function(center,marker){var options=Ext.apply({},this.mapOptions);options=Ext.applyIf(options,{zoom:14,center:center,mapTypeId:google.maps.MapTypeId.HYBRID});this.gmap=new google.maps.Map(this.body.dom,options);if(marker){this.addMarker(Ext.applyIf(marker,{position:center}));}
Ext.each(this.markers,this.addMarker,this);this.fireEvent('mapready',this,this.gmap);},addMarker:function(marker){marker=Ext.apply({map:this.gmap},marker);if(!marker.position){marker.position=new google.maps.LatLng(marker.lat,marker.lng);}
var o=new google.maps.Marker(marker);Ext.Object.each(marker.listeners,function(name,fn){google.maps.event.addListener(o,name,fn);});return o;},lookupCode:function(addr,marker){this.geocoder=new google.maps.Geocoder();this.geocoder.geocode({address:addr},Ext.Function.bind(this.onLookupComplete,this,[marker],true));},onLookupComplete:function(data,response,marker){if(response!='OK'){Ext.MessageBox.alert('Error','An error occured: "'+response+'"');return;}
this.createMap(data[0].geometry.location,marker);},afterComponentLayout:function(w,h){this.callParent(arguments);this.redraw();},redraw:function(){var map=this.gmap;if(map){google.maps.event.trigger(map,'resize');}}});Ext.define('Ext.ux.FieldReplicator',{alias:'plugin.fieldreplicator',init:function(field){if(!field.replicatorId){field.replicatorId=Ext.id();}
field.on('blur',this.onBlur,this);},onBlur:function(field){var ownerCt=field.ownerCt,replicatorId=field.replicatorId,isEmpty=Ext.isEmpty(field.getRawValue()),siblings=ownerCt.query('[replicatorId='+replicatorId+']'),isLastInGroup=siblings[siblings.length-1]===field,clone,idx;if(isEmpty&&!isLastInGroup){Ext.Function.defer(field.destroy,10,field);}
else if(!isEmpty&&isLastInGroup){if(field.onReplicate){field.onReplicate();}
clone=field.cloneConfig({replicatorId:replicatorId});idx=ownerCt.items.indexOf(field);ownerCt.add(idx+1,clone);}}});